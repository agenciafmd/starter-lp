// Project's common (global) styles

// Creates text classes for all fonts
@each $font-key, $font-map in $project-fonts {

  .#{$font-key}-text {

    font-family: get-font-family($font-map);
  }
}

// Generate responsive font sizes
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $font-size in $font-sizes {
      .fs#{$infix}-#{$font-size} {
        font-size: #{$font-size}px;
      }
    }
  }
}

//Generate letter-spacing and line-height with grid-breakpoint to use in html
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $key, $value in $spacers {

      $unitLess-value: strip-unit($value);

      @if ($unitLess-value >= 0) {

        .lh#{$infix}-#{$key} {
          line-height: $unitLess-value+px;
        }
      }

      .ls#{$infix}-#{$key} {
        letter-spacing: $unitLess-value+px;
      }

      @if ($unitLess-value != 0) {

        .ls#{$infix}-n#{$key} {
          letter-spacing: (-$unitLess-value)+px;
        }
      }
    }
  }
}

// Generate stroke and fill for each color in theme, including links.
@each $color, $value in $theme-colors {

  .stroke-#{$color} {

    stroke: $value;
  }

  .fill-#{$color} {

    fill: $value;
  }

  @include media-breakpoint-up(md) {

    a {

      @include hover {

        .stroke-#{$color} {

          stroke: darken($value, $emphasized-link-hover-darken-percentage);
        }

        .fill-#{$color} {

          fill: darken($value, $emphasized-link-hover-darken-percentage);
        }
      }
    }
  }
}
